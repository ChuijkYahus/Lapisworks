import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'org.jetbrains.kotlin.jvm' version "2.2.20-Beta2"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	maven { url "https://maven.blamejared.com" }
	maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.kosmx.dev/" }
	exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = 'GeckoLib'
                url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
            }
        }
        filter { 
            includeGroup('software.bernie.geckolib')
			includeGroup('com.eliotlash.mclib') // fucking mclib
        }
    }
	maven {
		url 'https://repo.sleeping.town'
		content {
			includeGroup 'com.unascribed'
		}
	}
	maven {
		name = "Hexxy's Maven (everyone thank Kyra)"
		url = "https://maven.hexxy.media/"
	}
	maven { url "https://jitpack.io" }
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url "https://mvn.devos.one/snapshots/" }
	maven { url "https://maven.architectury.dev/" }
}

loom {
	//splitEnvironmentSourceSets()

	mods {
		"lapisworks" {
			sourceSet sourceSets.main
			//sourceSet sourceSets.client
		}
	}

}

// hello people looking at this build.gradle
// some of you might hate me for using files()
// uh don't hate the player hate the game :skull:
// what no maven does to a mf
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// hexcasting (please work man)
	modImplementation ("at.petra-k.hexcasting:hexcasting-fabric-${project.minecraft_version}:${project.hexcasting_version}") {
		exclude module: "phosphor"
		exclude module: "lithium"
		exclude module: "emi"
	}
	modImplementation("net.fabricmc:fabric-language-kotlin:${fabric_kotlin_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-block:${project.cca_version}")
	modImplementation("at.petra-k:paucal:0.6.1-pre-7+1.20.1-fabric")
	modImplementation("vazkii.patchouli:Patchouli:1.20.1-84.1-FABRIC")
	modImplementation("com.samsthenerd.inline:inline-fabric:1.20.1-1.2.2-12")
	modImplementation("dev.emi:trinkets:${trinkets_version}")
	modApi "me.shedaniel.cloth:cloth-config-fabric:11.1.136"
	modLocalRuntime "io.github.tropheusj:serialization-hooks:0.4.99999"

	modCompileOnly "dev.architectury:architectury-fabric:9.1.12"
	modLocalRuntime "dev.architectury:architectury-fabric:9.1.12"
	// Lapixtended
	modCompileOnly "maven.modrinth:hextended-staves:${hextended_version}-fabric,1.20.1"
	modLocalRuntime "maven.modrinth:hextended-staves:${hextended_version}-fabric,1.20.1"
	// Lexical
	// test 2.0.0
	modCompileOnly files("${rootProject.rootDir}\\libs\\hexical-2.0.0-e0d7ef9.jar")
	//modLocalRuntime files("${rootProject.rootDir}\\libs\\hexical-2.0.0-e0d7ef9.jar")
	modCompileOnly files("${rootProject.rootDir}\\libs\\hexpose-1.0.0.jar")
	//modLocalRuntime files("${rootProject.rootDir}\\libs\\hexpose-1.0.0.jar")
	modCompileOnly "dev.kosmx.player-anim:player-animation-lib-fabric:${player_animator_version}"
	modLocalRuntime "dev.kosmx.player-anim:player-animation-lib-fabric:${player_animator_version}"
	// test 1.5.0
	//modLocalRuntime "maven.modrinth:hexical:1.5.0-fabric,1.20.1"
	// Lapisal
	modLocalRuntime("com.eliotlash.mclib:mclib:20")
	modCompileOnly("ram.talia.hexal:hexal-fabric-1.20.1:0.3.0") {
		exclude module: 'serialization-hooks'
		exclude module: "mclib"
	}
	modLocalRuntime("ram.talia.hexal:hexal-fabric-1.20.1:0.3.0") {
		exclude module: 'serialization-hooks'
		exclude module: "mclib"
	}
	// Enchants the Mind


	/*testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'*/
}

/*test {
	useJUnitPlatform()
}*/

tasks.withType(Jar).configureEach {
    if (name == 'sourcesJar') {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}

processResources {
	duplicatesStrategy 'exclude' // arcane magic i dont understand
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}
tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}